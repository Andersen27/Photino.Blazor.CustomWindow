@using Microsoft.AspNetCore.Components.Web
@using System.Drawing

<div class="pb-custom-window" @attributes="@AdditionalAttributes"
     style="width: 100vw; height: 100vh;
            --pb-custom-window-color: @WindowColor;
            --pb-custom-window-title-color: @TitleColor;
            --pb-custom-window-header-height: @(HeaderHeight)px; @Style">
    <div style="position: fixed; width: 100vw; height: 100vh; display: grid; grid-template-rows: var(--pb-custom-window-header-height) 1fr">
        <div class="pb-custom-window-header" style="-webkit-user-select: none;">
            <div @ref="headerDragArea" style="display: flex; align-items: center;"
                 @onpointerdown="OnHeaderPointerDownAsync" @onpointerup="OnHeaderPointerUp"
                 @onpointermove="OnHeaderPointerMoveAsync" @ondblclick="OnHeaderDoubleClick">
                @if(HeaderMainLayout is null)
                {
                    <div style="height: 100%; display: flex; gap: 5px; padding: 3px 5px; pointer-events: none;">
                        @if (ShowIcon && !string.IsNullOrEmpty(IconSource))
                        {
                            <img class="pb-custom-window-icon" style="height: 100%" src="@(IconSource)" alt="" />
                        }
                        <p class="pb-custom-window-title">
                           @Title
                        </p>
                    </div>
                }
                else
                {
                    @HeaderMainLayout
                }

                <div style="pointer-events: none; flex-grow: 1">
                    @if (HeaderCentralLayout != null)
                    {
                        @HeaderCentralLayout
                    }
                </div>
            </div>

            <div class="pb-custom-window-control-buttons">
                @if (HeaderExtraControlsLayout != null)
                {
                    @HeaderExtraControlsLayout
                }
            </div>

            <div>
                @if(HeaderControlsLayout is null)
                {
                    <div class="pb-custom-window-control-buttons">
                        <button @onclick="Minimize"
                                class="pb-custom-window-control-button pb-custom-window-minimize-button">
                            @if(MinimizeButtonContent is null)
                            {
                                <svg viewBox="0 0 22 22"><path d="m6,11h10v1h-10z" /></svg>
                            }
                            else
                            {
                                @MinimizeButtonContent
                            }
                        </button>

                        @if (Maximized)
                        {
                            <button @onclick="Restore"
                                    class="pb-custom-window-control-button pb-custom-window-restore-button">
                                @if (RestoreButtonContent is null)
                                {
                                    <svg viewBox="0 0 22 22"><path d="m6,9h7v7h-7zm1,1v5h5v-5zm1,-2v-2h8v8h-2v-1h1v-6h-6v1z" /></svg>
                                }
                                else
                                {
                                    @RestoreButtonContent
                                }
                            </button>
                        }
                        else
                        {
                            <button @onclick="Maximize"
                                    class="pb-custom-window-control-button pb-custom-window-maximize-button">
                                @if (MaximizeButtonContent is null)
                                {
                                    <svg viewBox="0 0 22 22"><path d="m6,6h10v10h-10zm1,1v8h8v-8z" /></svg>
                                }
                                else
                                {
                                    @MaximizeButtonContent
                                }
                            </button>
                        }

                        <button @onclick="Close"
                                class="pb-custom-window-control-button pb-custom-window-close-button">
                            @if (CloseButtonContent is null)
                            {
                                <svg viewBox="0 0 22 22"><path d="m6 7l1-1 4 4 4-4 1 1-4 4 4 4-1 1-4-4-4 4-1-1 4-4z" /></svg>
                            }
                            else
                            {
                                @CloseButtonContent
                            }
                        </button>
                    </div>
                }
                else
                {
                    @HeaderControlsLayout
                }
            </div>
        </div>
        <div style="position: relative; overflow: hidden; margin: 0 1px 1px 1px; background-color: white">
            @WindowContent
        </div>
    </div>

    @if (Resizable && ResizeAvailable)
    {
        <div @ref="resizeThumbLeft"
             style="width: @(ResizeAreaWidth)px; height: 100%; cursor: ew-resize"
             @onpointerdown="@(e => OnResizeThumbPointerDown(ResizeThumb.Left, e))"
             @onpointerup="OnResizeThumbPointerUp" @onpointermove="OnResizeThumbPointerMoveAsync">
        </div>

        <div @ref="resizeThumbRight"
             style="width: @(ResizeAreaWidth)px; height: 100%; right: 0; cursor: ew-resize"
             @onpointerdown="@(e => OnResizeThumbPointerDown(ResizeThumb.Right, e))"
             @onpointerup="OnResizeThumbPointerUp" @onpointermove="OnResizeThumbPointerMoveAsync">
        </div>

        <div @ref="resizeThumbTop"
             style="height: @(ResizeAreaWidth)px; width: 100%; cursor: ns-resize"
             @onpointerdown="@(e => OnResizeThumbPointerDown(ResizeThumb.Top, e))"
             @onpointerup="OnResizeThumbPointerUp" @onpointermove="OnResizeThumbPointerMoveAsync">
        </div>

        <div @ref="resizeThumbBottom"
             style="height: @(ResizeAreaWidth)px; width: 100%; bottom: 0; cursor: ns-resize"
             @onpointerdown="@(e => OnResizeThumbPointerDown(ResizeThumb.Bottom, e))"
             @onpointerup="OnResizeThumbPointerUp" @onpointermove="OnResizeThumbPointerMoveAsync">
        </div>

        <div @ref="resizeThumbTopLeft"
             style="width: @(ResizeAreaWidth)px; aspect-ratio: 1; cursor: nwse-resize"
             @onpointerdown="@(e => OnResizeThumbPointerDown(ResizeThumb.TopLeft, e))"
             @onpointerup="OnResizeThumbPointerUp" @onpointermove="OnResizeThumbPointerMoveAsync">
        </div>

        <div @ref="resizeThumbTopRight"
             style="width: @(ResizeAreaWidth)px; aspect-ratio: 1; right: 0; cursor: nesw-resize"
             @onpointerdown="@(e => OnResizeThumbPointerDown(ResizeThumb.TopRight, e))"
             @onpointerup="OnResizeThumbPointerUp" @onpointermove="OnResizeThumbPointerMoveAsync">
        </div>

        <div @ref="resizeThumbBottomLeft"
             style="width: @(ResizeAreaWidth)px; aspect-ratio: 1; bottom: 0; cursor: nesw-resize"
             @onpointerdown="@(e => OnResizeThumbPointerDown(ResizeThumb.BottomLeft, e))"
             @onpointerup="OnResizeThumbPointerUp" @onpointermove="OnResizeThumbPointerMoveAsync">
        </div>

        <div @ref="resizeThumbBottomRight"
             style="width: @(ResizeAreaWidth)px; aspect-ratio: 1; bottom: 0; right: 0; cursor: nwse-resize"
             @onpointerdown="@(e => OnResizeThumbPointerDown(ResizeThumb.BottomRight, e))"
             @onpointerup="OnResizeThumbPointerUp" @onpointermove="OnResizeThumbPointerMoveAsync">
        </div>
    } 
</div>
